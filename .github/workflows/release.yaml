name: release
on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:
permissions:
  id-token: write
  pull-requests: write
  contents: write
jobs:
  release:
    runs-on: ubuntu-latest
    if: github.repository == 'awslabs/node-latency-for-k8s'
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'
          check-latest: true
          cache-dependency-path: '**/go.sum'
      - run: make toolchain
      - uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::296108164462:role/Github
          aws-region: us-east-1
      - env:
          NLK_KO_DOCKER_REPO: public.ecr.aws/g4k0u1s2
        run: |
          VERSION=${GITHUB_REF#refs/*/} make publish
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Upload assets
        uses: actions/upload-artifact@v3
        with:
          name: node-latency-for-k8s
          path: dist/*
      - run: |
          RELEASE_VERSION=${GITHUB_REF#refs/*/}
          git config user.name "Release"
          git config user.email "release@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPO}
          git config pull.rebase false

          BRANCH_NAME="release-${RELEASE_VERSION}"
          git checkout -b "${BRANCH_NAME}"
          git add charts/
          git add README.md
          git commit -m "Release updates ${RELEASE_VERSION}."
          git push --set-upstream origin "${BRANCH_NAME}"
          gh pr create --title "chore: Release ${RELEASE_VERSION}" --body "Release ${RELEASE_VERSION}" --base main --head "release-${RELEASE_VERSION}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPO: ${{ github.repository }}
